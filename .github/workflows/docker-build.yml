name: Docker Build and Push

on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
      release_type:
        required: true
        type: string
      pre_release:
        required: false
        type: boolean
        default: false
      nightly_tag_main:
        description: "Tag for the nightly main build"
        required: false
        type: string
        default: ''
      nightly_tag_base:
        description: "Tag for the nightly base build"
        required: false
        type: string
        default: ''

  workflow_dispatch:
    inputs:
      version:
        description: "Version to build"
        required: false
        type: string
      release_type:
        description: "Type of release"
        required: true
        type: string
      pre_release:
        description: "Pre-release"
        required: false
        type: boolean
        default: false
      nightly_tag_main:
        description: "Tag for the nightly main build"
        required: false
        type: string
        default: ''
      nightly_tag_base:
        description: "Tag for the nightly base build"
        required: false
        type: string
        default: ''

env:
  POETRY_VERSION: "1.8.2"
  TEST_TAG: "ixinjulu/platform:test"

jobs:
  get-version:
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version-input.outputs.version || steps.get-version-base.outputs.version || steps.get-version-main.outputs.version }}
      nightly-tag: ${{ steps.resolve-nightly-tag.outputs.nightly_tag }}
      nightly-build: ${{ steps.resolve-nightly-tag.outputs.nightly_build }}
    steps:
      - name: Resolve nightly tag
        id: resolve-nightly-tag
        run: |
          if [[ "${{ inputs.nightly_tag_base }}" != '' ]]; then
            ...
          elif [[ "${{ inputs.nightly_tag_main }}" != '' ]]; then
            ...
          else
            ...
      - name: Check out the code at a specific ref
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.nightly_tag_main || github.ref }}
          persist-credentials: true
      - name: "Setup Environment"
        uses: ./.github/actions/setup-uv
        with:
          ref: ${{ inputs.nightly_tag_main || github.ref }}

      - name: Install the project
        run: uv sync --dev
      
      - name: Get Version from Input
        if: ${{ inputs.version != '' }}
        id: get-version-input
        run: |
          version=${{ inputs.version }}
          echo version=$version
          echo version=$version >> $GITHUB_OUTPUT
      - name: Get Version Base
        if: ${{ inputs.version == '' && inputs.release_type == 'base' }}
        id: get-version-base
        run: |
          version=$(uv tree | grep 'platform-base' | awk '{print $3}' | sed 's/^v//')
          echo version=$version
          echo version=$version >> $GITHUB_OUTPUT
      - name: Get Version Main
        if: ${{ inputs.version == '' && inputs.release_type == 'main' }}
        id: get-version-main
        run: |
          version=$(uv tree | grep 'platform' | grep -v 'platform-base' | awk '{print $2}' | sed 's/^v//')
          echo version=$version
          echo version=$version >> $GITHUB_OUTPUT
          
  setup:
    runs-on: ubuntu-latest
    needs: get-version
    outputs:
      docker_tags: ${{ steps.set-vars.outputs.docker_tags }}
      file: ${{ steps.set-vars.outputs.file }}
    steps:
      - name: Check out the code at a specific ref
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.nightly_tag_main || github.ref }}

      - name: Set Dockerfile and Tags
        id: set-vars
        run: |
          nightly_suffix=''
          if [[ "${{ needs.get-version.outputs.nightly-build }}" == "true" ]]; then
            nightly_suffix="-nightly"
          fi

          if [[ "${{ inputs.release_type }}" == "base" ]]; then
            echo "docker_tags=ixinjulu/platform${nightly_suffix}:base-${{ needs.get-version.outputs.version }},ixinjulu/platform${nightly_suffix}:base-latest" >> $GITHUB_OUTPUT
            echo "file=./docker/build_and_push_base.Dockerfile" >> $GITHUB_OUTPUT
          else
            if [[ "${{ inputs.pre_release }}" == "true" ]]; then
              echo "docker_tags=ixinjulu/platform${nightly_suffix}:${{ needs.get-version.outputs.version }}" >> $GITHUB_OUTPUT
            else
              echo "docker_tags=ixinjulu/platform${nightly_suffix}:${{ needs.get-version.outputs.version }},ixinjulu/platform${nightly_suffix}:latest" >> $GITHUB_OUTPUT
            fi
            echo "file=./docker/build_and_push.Dockerfile" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-latest
    needs: [get-version, setup]
    steps:
      - name: Check out the code at a specific ref
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          persist-credentials: true
      - name: "Setup Environment"
        uses: ./.github/actions/setup-uv
        with:
          ref: ${{ inputs.nightly_tag_main || github.ref }}

      - name: Install the project
        run: |
          if [[ "${{ inputs.release_type }}" == "base" ]]; then
            cd src/backend/base && uv sync --no-dev --no-sources
          else
            uv sync --no-dev --no-sources
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ${{ needs.setup.outputs.file }}
          tags: ${{ needs.setup.outputs.docker_tags }}
          provenance: false

# Build additional components (backend, frontend) if needed
build_components:
  if: ${{ inputs.release_type == 'main' }}
  runs-on: ubuntu-latest
  strategy:
    matrix:
      component: [docker-backend, docker-frontend]
    ...
  steps:
    - name: Check out the code at a specific ref
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.nightly_tag_main || github.ref }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      if: ${{ matrix.component == 'docker-backend' }} || ${{ matrix.component == 'docker-frontend' }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push ${{ matrix.component }}
      uses: docker/build-push-action@v6
      with:
        context: .
        build-args: |
          PLATFORM_IMAGE=${{ matrix.langflow_image }}
        file: ${{ matrix.dockerfile }}
        tags: ${{ matrix.tags }}
        provenance: false
