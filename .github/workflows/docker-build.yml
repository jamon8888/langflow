name: Docker Build and Push

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
    tags:
      - v*

env:
  REGISTRY: docker.io
  IMAGE_NAME: 'ixinjulu/platform'

jobs:
  # Main job to build the primary backend and frontend images
  build_components:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Matrix to build both backend and frontend components on multiple platforms
        component: [docker-backend, docker-frontend]
        platform: [linux/amd64, linux/arm64]  # Build for different platforms

    steps:
      # Step 1: Checkout the repository
      - name: Check out the repository
        uses: actions/checkout@v4

      # Step 2: Set up QEMU for multi-platform support
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Docker login to the container registry (Docker Hub)
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Build and push the images for backend and frontend
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}  # Build across platforms
          push: true
          file: |
            ${{ matrix.component == 'docker-backend' && 'docker/build_and_push_backend.Dockerfile' || 'docker/frontend/build_and_push_frontend.Dockerfile' }}
          # Corrected this tags section 
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.ref == 'refs/heads/main' && 'latest' || (github.ref == 'refs/heads/dev' && 'dev') || github.ref_name }}
          build-args: |
            COMPONENT=${{ matrix.component }}  # Pass which component is being built

      # Step 6: Verify the built images (optional check)
      - name: Verify Docker Images
        run: docker images

  # Merge the built images into a multi-arch manifest
  merge_images:
    needs: build_components
    runs-on: ubuntu-latest
    steps:
      # Step 1: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      # Step 2: Log into Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Create and push a multi-platform manifest for the image
      - name: Create and Push Multi-Platform Manifests
        run: |
          docker buildx imagetools create \
            --tag ${{ env.IMAGE_NAME }}:latest \
            --tag ${{ env.IMAGE_NAME }}:dev \
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
