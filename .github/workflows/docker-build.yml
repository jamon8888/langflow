name: Docker Build and Push

env:
  POETRY_VERSION: "1.8.2"
  TEST_TAG: "ixinjulu/platform:test"

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
    tags:
      - v*

env:
  REGISTRY: docker.io
  IMAGE_NAME: 'langflowai'

jobs:
  build-backend-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Multi-platform Docker Backend
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/build_and_push_backend.Dockerfile
          tags: ${{ env.IMAGE_NAME }}/langflow-backend:latest
          platforms: linux/amd64,linux/arm64
          provenance: false

  build-frontend-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Multi-platform Docker Frontend
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/frontend/build_and_push_frontend.Dockerfile
          tags: ${{ env.IMAGE_NAME }}/langflow-frontend:latest
          platforms: linux/amd64,linux/arm64
          provenance: false

  merge-images:
    runs-on: ubuntu-latest
    needs: [build-backend-image, build-frontend-image]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create manifest list and push
        run: |
          docker buildx imagetools create \
            ${{ env.IMAGE_NAME }}/langflow-backend:latest \
            ${{ env.IMAGE_NAME }}/langflow-frontend:latest

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}/langflow-backend:latest
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}/langflow-frontend:latest

